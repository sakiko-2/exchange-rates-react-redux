{"version":3,"sources":["components/Header.module.css","components/Footer.module.css","reducers/ratesReducer.js","reducers/filtersReducer.js","reducers/rootReducer.js","actions/actionTypes.js","store/store.js","components/Header.js","selectors/filters.js","components/Filter.js","actions/index.js","components/List.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","components/List.module.css","components/Filter.module.css"],"names":["module","exports","ratesInitialState","data","date","loading","filtersInitialtState","text","sortBy","combineReducers","rates","state","action","type","Object","entries","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Header","className","headerStyles","navbar","logo","size","getFilteredList","item","toLowerCase","includes","sort","a","b","Filter","props","useState","active","dropdownState","setDropdownState","showDropdown","toggleDropdown","filterStyles","placeholder","onChange","e","setTextFilter","target","value","onTextChange","aria-label","href","aria-haspopup","aria-controls","onClick","id","role","sortByCurrency","sortByRate","defaultProps","connect","dispatch","List","this","fetchData","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","listContent","listStyles","tableContainer","table","map","key","formatNum","list","Component","url","fetch","then","response","json","responseData","catch","error","fetchFailure","Footer","footerStyles","footer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,yB,iKCCrBC,EAAoB,CACxBC,KAAM,GACNC,KAAM,GACNC,SAAS,GCHLC,EAAuB,CAC3BC,KAAM,GACNC,OAAQ,YCAKC,cAAgB,CAC7BC,MFGa,WAAwC,IAAvCC,EAAsC,uDAA9BT,EAAmBU,EAAW,uCACpD,OAAQA,EAAOC,MACb,IGTyB,gBHUvB,OAAO,eACFF,EADL,CAEER,KAAMW,OAAOC,QAAQH,EAAOT,KAAKO,OACjCN,KAAMQ,EAAOT,KAAKC,KAClBC,SAAS,IAEb,QACE,OAAOM,IEZXK,ODCa,WAA2C,IAA1CL,EAAyC,uDAAjCL,EAAsBM,EAAW,uCACvD,OAAQA,EAAOC,MACb,IEN2B,kBFOzB,OAAO,eACFF,EADL,CAEEJ,KAAMK,EAAOL,OAEjB,IEV4B,mBFW1B,OAAO,eACFI,EADL,CAEEH,OAAQ,aAEZ,IEdwB,eFetB,OAAO,eACFG,EADL,CAEEH,OAAQ,SAEZ,QACE,OAAOG,MGrBPM,EAAmBC,OAAOC,sCAAwCC,IAOzDC,EALDC,YACZC,EACAN,EAAiBO,YAAgBC,O,yBCIpBC,EARA,kBACb,yBAAKC,UAAS,kBAAaC,IAAaC,SACtC,yBAAKF,UAAU,gBACb,kBAAC,IAAD,CAAOA,UAAWC,IAAaE,KAAMC,KAAM,Q,wCCNpCC,EAAkB,SAAC7B,EAAD,OAASK,EAAT,EAASA,OAAQD,EAAjB,EAAiBA,KAAjB,OAC7BJ,EAAKa,QAAO,SAACiB,GAAD,MACG,QAAZA,EAAK,IACFA,EAAK,GAAGC,cAAcC,SAAS5B,EAAK2B,kBAEvCE,MAAK,SAACC,EAAGC,GACR,MAAe,SAAX9B,EACK6B,EAAE,GAAKC,EAAE,GAAK,GAAK,EAErBD,EAAE,GAAKC,EAAE,GAAK,GAAK,M,gCCC1BC,EAAS,SAACC,GAAW,IAAD,EACkBC,mBAAS,CAAEC,QAAQ,IADrC,mBACjBC,EADiB,KACFC,EADE,KAGlBC,EAAeF,EAAcD,OAAS,YAAc,GAEpDI,EAAiB,WACrBF,EAAiB,CAAEF,QAASC,EAAcD,UAOpClC,EAAiBgC,EAAjBhC,OAAQD,EAASiC,EAATjC,KAEhB,OACE,yBAAKoB,UAAWoB,IAAa/B,QAC3B,yBAAKW,UAAU,SACb,uBAAGA,UAAU,2BACX,2BACEA,UAAU,QACVd,KAAK,OACLmC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAdC,SAACA,GACpBV,EAAMW,cAAcD,EAAEE,OAAOC,OAaJC,CAAaJ,IAC9BG,MAAO9C,EACPgD,aAAW,WAEb,0BAAM5B,UAAU,0BACd,kBAAC,IAAD,SAIN,yBAAKA,UAAS,0BAAqBoB,IAAaX,OAC7C,WACD,yBAAKT,UAAS,mBAAckB,IAC1B,yBAAKlB,UAAU,oBACb,uBACE6B,KAAK,KACLC,gBAAc,OACdC,gBAAc,iBACdC,QAAS,kBAAMb,MAEf,0BAAMnB,UAAWoB,IAAavC,QAASA,KAG3C,yBACEmB,UAAU,gBACViC,GAAG,iBACHC,KAAK,QAEL,yBAAKlC,UAAU,oBACb,uBACE6B,KAAK,KACL7B,UAAU,gBACVgC,QAAS,WAAQnB,EAAMsB,iBAAkBhB,MAH3C,YAOA,uBACEU,KAAK,KACL7B,UAAU,gBACVgC,QAAS,WAAQnB,EAAMuB,aAAcjB,MAHvC,cAuBdP,EAAOyB,aAAe,CACpBzD,KAAM,IAGR,IAWe0D,eAXS,SAACtD,GAAD,MAAY,CAClCH,OAAQG,EAAMK,OAAOR,OACrBD,KAAMI,EAAMK,OAAOT,SAGM,SAAC2D,GAAD,MAAe,CACxCJ,eAAgB,kBAAMI,EC7Da,CACnCrD,KLtC8B,sBImG9BkD,WAAY,kBAAMG,EC1Da,CAC/BrD,KLzC0B,kBImG1BsC,cAAe,SAAC5C,GAAD,OAAU2D,ECpEE,eAAC3D,EAAD,uDAAQ,GAAR,MAAgB,CAC3CM,KLlC6B,kBKmC7BN,QDkEkC4C,CAAc5C,QAGnC0D,CAA6C1B,G,gBElGtD4B,E,4LAGFC,KAAK5B,MAAM6B,c,gCAGHC,GACR,OAAOA,EAAMA,EAAIC,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,IAAO,M,+BAG3F,IAAD,SACyBL,KAAK5B,MAA7BrC,EADD,EACCA,KAAMC,EADP,EACOA,KAERsE,EAHC,EACarE,QAGlB,yBAAKsB,UAAWgD,IAAWC,gBACzB,0BAAMjD,UAAU,sBAIhB,oCACE,kBAAC,EAAD,MACA,yBAAKA,UAAWgD,IAAWC,gBACzB,2BAAOjD,UAAS,2BAAsBgD,IAAWE,QAC/C,+BACE,4BACE,wCACA,sCAGJ,+BACG1E,EAAK2E,KAAI,SAAC7C,GAAD,OACR,wBAAI8C,IAAK9C,EAAK,IACZ,4BAAKA,EAAK,IACV,4BAAK,EAAK+C,UAAU/C,EAAK,aASzC,OACE,6BAASN,UAAS,kBAAagD,IAAWM,OACxC,wBAAItD,UAAU,mCAAd,qBAEE,6BAFF,0BAIE,0BAAMA,UAAWgD,IAAWvE,MAAOA,IAEpCsE,O,GAlDUQ,aAsEnBf,EAAKH,aAAe,CAClB7D,KAAM,GACNC,KAAM,IAGR,IAUe6D,eAVS,SAACtD,GAAD,MAAY,CAClCR,KAAM6B,EAAgBrB,EAAMD,MAAMP,KAAMQ,EAAMK,QAC9CZ,KAAMO,EAAMD,MAAMN,KAClBC,QAASM,EAAMD,MAAML,YAGI,SAAC6D,GAAD,MAAe,CACxCG,UAAW,SAACc,GAAD,OAASjB,GDjES,SAACA,GAC9BA,EAhBiC,CACjCrD,KLZ2B,kBK4B3BuE,MAnBU,iDAoBPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLtB,EAhBiC,CACrCrD,KLf2B,gBKgB3BR,SAAS,EACTF,KAa0BqF,OAEvBC,OAAM,SAACC,GAAD,OAAWxB,EAZM,SAACwB,GAAD,MAAY,CACtC7E,KLpB2B,gBKqB3B6E,SAU6BC,CAAaD,cC6D7BzB,CAA6CE,G,iBCrF7CyB,EANA,kBACb,4BAAQjE,UAAWkE,IAAaC,QAC9B,iFCQWC,EARH,kBACV,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGgBC,QACW,cAA7B9E,OAAO+E,SAASC,UAEe,UAA7BhF,OAAO+E,SAASC,UAEhBhF,OAAO+E,SAASC,SAASC,MACvB,2D,YCRNC,IAASC,OACP,kBAAC,IAAD,CAAUhF,MAAOA,GACf,kBAAC,EAAD,OAEFiF,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdnB,OAAM,SAAAC,GACLmB,QAAQnB,MAAMA,EAAMoB,a,kBExI5B9G,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,eAAiB,6BAA6B,MAAQ,sB,kBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,0B","file":"static/js/main.60552962.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__2-TbX\",\"logo\":\"Header_logo__2ins2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NNgL\"};","import { FETCH_SUCCESS } from '../actions/actionTypes';\n\nconst ratesInitialState = {\n  data: [],\n  date: '',\n  loading: true,\n};\n\nexport default (state = ratesInitialState, action) => {\n  switch (action.type) {\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        data: Object.entries(action.data.rates),\n        date: action.data.date,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_TEXT_FILTER, SORT_BY_CURRENCY, SORT_BY_RATE } from '../actions/actionTypes';\n\nconst filtersInitialtState = {\n  text: '',\n  sortBy: 'currency',\n};\n\nexport default (state = filtersInitialtState, action) => {\n  switch (action.type) {\n    case SET_TEXT_FILTER:\n      return {\n        ...state,\n        text: action.text,\n      };\n    case SORT_BY_CURRENCY:\n      return {\n        ...state,\n        sortBy: 'currency',\n      };\n    case SORT_BY_RATE:\n      return {\n        ...state,\n        sortBy: 'rate',\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport ratesReducer from './ratesReducer';\nimport filtersReducer from './filtersReducer';\n\nexport default combineReducers({\n  rates: ratesReducer,\n  filter: filtersReducer,\n});\n","export const FETCH_REQUEST = 'FETCH_REQUEST';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\nexport const SET_TEXT_FILTER = 'SET_TEXT_FILTER';\nexport const SORT_BY_CURRENCY = 'SORT_BY_CURRENCY';\nexport const SORT_BY_RATE = 'SORT_BY_RATE';\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport { Globe } from 'react-feather';\nimport headerStyles from './Header.module.css';\n\nconst Header = () => (\n  <nav className={`navbar, ${headerStyles.navbar}`}>\n    <div className=\"navbar-brand\">\n      <Globe className={headerStyles.logo} size={48} />\n    </div>\n  </nav>\n);\n\nexport default Header;\n","/* eslint-disable import/prefer-default-export */\nexport const getFilteredList = (data, { sortBy, text }) => (\n  data.filter((item) => (\n    (item[0] !== 'NZD')\n    && (item[0].toLowerCase().includes(text.toLowerCase()))\n  ))\n    .sort((a, b) => {\n      if (sortBy === 'rate') {\n        return a[1] > b[1] ? 1 : -1;\n      }\n      return a[0] > b[0] ? 1 : -1;\n    })\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Search } from 'react-feather';\nimport {\n  setTextFilter,\n  sortByCurrency,\n  sortByRate,\n} from '../actions';\nimport filterStyles from './Filter.module.css';\n\nconst Filter = (props) => {\n  const [dropdownState, setDropdownState] = useState({ active: false });\n\n  const showDropdown = dropdownState.active ? 'is-active' : '';\n\n  const toggleDropdown = () => {\n    setDropdownState({ active: !dropdownState.active });\n  };\n\n  const onTextChange = (e) => {\n    props.setTextFilter(e.target.value);\n  };\n\n  const { sortBy, text } = props;\n\n  return (\n    <div className={filterStyles.filter}>\n      <div className=\"field\">\n        <p className=\"control has-icons-right\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Search currency\"\n            onChange={(e) => onTextChange(e)}\n            value={text}\n            aria-label=\"Search\"\n          />\n          <span className=\"icon is-small is-right\">\n            <Search />\n          </span>\n        </p>\n      </div>\n      <div className={`is-pulled-right ${filterStyles.sort}`}>\n        {'Sort by '}\n        <div className={`dropdown ${showDropdown}`}>\n          <div className=\"dropdown-trigger\">\n            <a\n              href=\"#!\"\n              aria-haspopup=\"true\"\n              aria-controls=\"dropdown-menu3\"\n              onClick={() => toggleDropdown()}\n            >\n              <span className={filterStyles.sortBy}>{sortBy}</span>\n            </a>\n          </div>\n          <div\n            className=\"dropdown-menu\"\n            id=\"dropdown-menu3\"\n            role=\"menu\"\n          >\n            <div className=\"dropdown-content\">\n              <a\n                href=\"#!\"\n                className=\"dropdown-item\"\n                onClick={() => { props.sortByCurrency(); toggleDropdown(); }}\n              >\n                Currency\n              </a>\n              <a\n                href=\"#!\"\n                className=\"dropdown-item\"\n                onClick={() => { props.sortByRate(); toggleDropdown(); }}\n              >\n                Rate\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  setTextFilter: PropTypes.func.isRequired,\n  sortByCurrency: PropTypes.func.isRequired,\n  sortByRate: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  text: PropTypes.string,\n};\n\nFilter.defaultProps = {\n  text: '',\n};\n\nconst mapStateToProps = (state) => ({\n  sortBy: state.filter.sortBy,\n  text: state.filter.text,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sortByCurrency: () => dispatch(sortByCurrency()),\n  sortByRate: () => dispatch(sortByRate()),\n  setTextFilter: (text) => dispatch(setTextFilter(text)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import {\n  FETCH_REQUEST,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  SET_TEXT_FILTER,\n  SORT_BY_CURRENCY,\n  SORT_BY_RATE,\n} from './actionTypes';\n\nconst URL = 'https://api.exchangerate.host/latest?base=NZD';\n\nexport const fetchRequest = () => ({\n  type: FETCH_REQUEST,\n});\n\nexport const fetchSuccess = (data) => ({\n  type: FETCH_SUCCESS,\n  loading: false,\n  data,\n});\n\nexport const fetchFailure = (error) => ({\n  type: FETCH_FAILURE,\n  error,\n});\n\nexport const fetchData = () => (dispatch) => {\n  dispatch(fetchRequest());\n  fetch(URL)\n    .then((response) => response.json())\n    .then((responseData) => {\n      dispatch(fetchSuccess(responseData));\n    })\n    .catch((error) => dispatch(fetchFailure(error)));\n};\n\nexport const setTextFilter = (text = '') => ({\n  type: SET_TEXT_FILTER,\n  text,\n});\n\nexport const sortByCurrency = () => ({\n  type: SORT_BY_CURRENCY,\n});\n\nexport const sortByRate = () => ({\n  type: SORT_BY_RATE,\n});\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../actions';\nimport { getFilteredList } from '../selectors/filters';\nimport Filter from './Filter';\nimport listStyles from './List.module.css';\n\nclass List extends Component {\n  componentDidMount() {\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.fetchData();\n  }\n\n  formatNum(num) {\n    return num ? num.toLocaleString('en-US', { minimumFractionDigits: 5, maximumFractionDigits: 5 }) : '-';\n  }\n\n  render() {\n    const { data, date, loading } = this.props;\n\n    const listContent = loading ? (\n      <div className={listStyles.tableContainer}>\n        <span className=\"loader is-size-2\" />\n      </div>\n    )\n      : (\n        <>\n          <Filter />\n          <div className={listStyles.tableContainer}>\n            <table className={`table is-striped ${listStyles.table}`}>\n              <thead>\n                <tr>\n                  <th>Currency</th>\n                  <th>Rate</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((item) => (\n                  <tr key={item[0]}>\n                    <td>{item[0]}</td>\n                    <td>{this.formatNum(item[1])}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n\n    return (\n      <section className={`section ${listStyles.list}`}>\n        <h3 className=\"subtitle is-3 has-text-centered\">\n          New Zealand Dollar\n          <br />\n          Foreign Exchange Rates:\n          <span className={listStyles.date}>{date}</span>\n        </h3>\n        {listContent}\n      </section>\n    );\n  }\n}\n\nList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    ),\n  ),\n  date: PropTypes.string,\n  fetchData: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nList.defaultProps = {\n  data: [],\n  date: '',\n};\n\nconst mapStateToProps = (state) => ({\n  data: getFilteredList(state.rates.data, state.filter),\n  date: state.rates.date,\n  loading: state.rates.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchData: (url) => dispatch(fetchData(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from 'react';\nimport footerStyles from './Footer.module.css';\n\nconst Footer = () => (\n  <footer className={footerStyles.footer}>\n    <p>&copy; Copyright 2020 Sakiko. All rights reserved.</p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header';\nimport List from './List';\nimport Footer from './Footer';\n\nconst App = () => (\n  <>\n    <Header />\n    <List />\n    <Footer />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"List_date__CDqVc\",\"list\":\"List_list__12_ST\",\"tableContainer\":\"List_tableContainer__2aIGQ\",\"table\":\"List_table__1gcNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2AQ0O\",\"sort\":\"Filter_sort__3Oc6s\",\"sortBy\":\"Filter_sortBy__2GGkY\"};"],"sourceRoot":""}